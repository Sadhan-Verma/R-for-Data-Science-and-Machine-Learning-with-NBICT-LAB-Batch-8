setwd("C:/Users/sadha/OneDrive/1. Classworks/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-49 ðŸ‘‰ Multiple Linear Regression in R (Part-2)")
dataset <- read.csv("50_Startups.csv")
View(dataset)
dataset$State <- factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
library(caTools)
set.seed(123)
split <- sample.split(dataset$Profit, SplitRatio = 0.8)
training_set <- subset(dataset, split == TRUE)
test_set <- subset(dataset, split == FALSE)
View(training_set)
View(test_set)
regressor <- lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
summary(regressor)
y_pred <- predict(regressor, test_set)
y_pred
regressor <- lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
summary(regressor)
regressor <- lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = training_set)
summary(regressor)
regressor <- lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = training_set)
summary(regressor)
# Automated Stepwise Backward Elimination
full_model <- lm(Profit ~ ., data = training_set)
summary(full_model)
final_model <- step(full_model, direction = "backward")
summary(final_model)
cor(training_set$R.D.Spend, training_set$Profit)
cor(training_set$R.D.Spend, training_set$Profit, method = 'pearson')
cor.test(training_set$R.D.Spend, training_set$Profit, method = 'pearson')
cor.test(training_set$Marketing.Spend, training_set$Profit, method = 'pearson')
plot(training_set$R.D.Spend, training_set$Profit)
plot(training_set$R.D.Spend, training_set$Profit)
plot(final_model)
# Checking for the independence of errors
# install.packages("lmtest")
library(lmtest)
dwtest(final_model)
# Normality of residuals
shapiro.test(rstandard(final_model))
qqnorm(rstandard(final_model))
qqline(rstandard(final_model))
# Checking multicollinearity
library(car)
vif(final_model)
summary(final_model)
plot(final_model$fitted.values, rstandard(final_model))
abline(h=0, col="red")
bptest(final_model)
