setwd("C:/Users/Sadhan Verma/Desktop/RDSML-Day-41 ðŸ‘‰ Two-way ANOVA in R (Part-3)")
# installing Packages
# install.packages(c("tidyverse", "car", "emmeans", "effectsize", "performance", "broom", "kableExtra"))
library(tidyverse)
# Importing the dataset
d <- read.csv("cropdata.csv")
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
print(summs)
library(ggplot2)
ggplot(summs, aes(irr, mean, group = fert))+
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width = .2)+
facet_wrap(~fert, nrow = 1) +
labs(x="Irrigation", y="Mean yield",
title="Interaction of Fertilizer x Irrigation") +
theme_classic(base_size = 12)
m <- aov(y ~ fert + irr + fert * irr, data = d)
summary(m)
par(mfrow=c(2,2))
plot(m)
par(mfrow=c(1,1))
res <- residuals(m)
shapiro.test(res)
# Levene's test for equal variances
library(car)
leveneTest(y ~ fert*irr, data = d, center = median)
library(emmeans)
contrast(emmeans(m, ~ fert | irr), method = "pairwise", adjust = "tukey")
library(emmeans)
contrast(emmeans(m, ~ irr | fert), method = "pairwise", adjust = "tukey")
contrast(emmeans(m, ~fert), method = "tukey")
contrast(emmeans(m, ~irr), method = "tukey")
library(multcomp)
# install.packages("multcompView")
library(multcompView)
group_letters <- cld(emmeans(m, ~ fert * irr), Letters = letters)
print(group_letters)
# Publication-ready ANOVA table
library(broom)
library(kableExtra)
library(car)
aov_tab <- Anova(m, type = 3) %>%
tidy() %>%
mutate(p.value = signif(p.value, 3))
View(aov_tab)
kbl(aov_tab, digits = 3, caption = "Two-way ANOVA") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman")
install.packages(c(
"tidyverse","car","emmeans","effectsize","performance",
"broom","broom.helpers","kableExtra","multcomp","multcompView","patchwork"
))
suppressPackageStartupMessages({
library(tidyverse); library(car); library(emmeans); library(effectsize)
library(performance); library(broom); library(broom.helpers)
library(kableExtra); library(multcomp); library(multcompView); library(patchwork)
})
d <- read.csv("cropdata.csv", stringsAsFactors = FALSE)
# Ensure expected columns exist
stopifnot(all(c("y","fert","irr") %in% names(d)))
d <- d %>%
mutate(
y    = as.numeric(y),
fert = factor(fert),
irr  = factor(irr)
) %>%
drop_na(y, fert, irr)
cat("\nCell counts (balance check):\n")
print(with(d, table(fert, irr)))
cat("\nGroup means (preview):\n")
print(d %>% group_by(fert, irr) %>% summarise(n=dplyr::n(), mean=mean(y), sd=sd(y), .groups="drop"))
summs <- d %>%
group_by(fert, irr) %>%
summarise(
n   = dplyr::n(),
mean= mean(y),
sd  = sd(y),
se  = sd/sqrt(n),
ci  = qt(.975, df=n-1)*se,  # 95% CI
.groups = "drop"
)
View(summs)
summs <- d %>%
group_by(fert, irr) %>%
summarise(
n   = dplyr::n(),
mean= mean(y),
sd  = sd(y),
se  = sd/sqrt(n),
.groups = "drop"
)
p_raw <- ggplot(d, aes(irr, y, color=fert)) +
geom_jitter(width=.08, height=0, alpha=.4) +
stat_summary(fun=mean, geom="point", position=position_dodge(width=.4), size=2.4) +
labs(title="Raw data with means", x="Irrigation", y="Yield")
summs <- d %>%
group_by(fert, irr) %>%
summarise(
n   = dplyr::n(),
mean= mean(y),
sd  = sd(y),
se  = sd/sqrt(n),
ci  = qt(.975, df=n-1)*se,  # 95% CI
.groups = "drop"
)
p_raw <- ggplot(d, aes(irr, y, color=fert)) +
geom_jitter(width=.08, height=0, alpha=.4) +
stat_summary(fun=mean, geom="point", position=position_dodge(width=.4), size=2.4) +
labs(title="Raw data with means", x="Irrigation", y="Yield")
p_ci <- ggplot(summs, aes(irr, mean, group=fert, color=fert)) +
geom_line(position=position_dodge(width=.3)) +
geom_point(size=2, position=position_dodge(width=.3)) +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci),
width=.15, position=position_dodge(width=.3)) +
labs(title="Means Â± 95% CI by Fertilizer Ã— Irrigation", x="Irrigation", y="Mean yield")
(p_raw / p_ci) + plot_annotation(title = "Exploratory view")
m <- aov(y ~ fert * irr, data = d)
# Publication-ready ANOVA (Type III)
aov_tab <- car::Anova(m, type = 3) %>%
broom::tidy() %>%
mutate(
term     = recode(term, `(Intercept)` = "Intercept"),
p.value  = signif(p.value, 3)
)
aov_tab <- Anova(m, type = 3) %>%
tidy() %>%
mutate(p.value = signif(p.value, 3))
kbl(aov_tab, digits = 3, caption = "Two-way ANOVA") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman")
es <- eta_squared(m, partial = TRUE, generalized = TRUE)
aov_tab <- aov_tab %>%
left_join(es %>% select(Parameter, `Eta2_partial`, `Eta2_generalized`),
by = c("term" = "Parameter"))
aov_kbl <- kbl(
aov_tab,
digits = 3,
caption = "Two-way ANOVA (Type III) with effect sizes"
) %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman")
print(aov_kbl)
es <- effectsize::eta_squared(m, partial = TRUE, generalized = TRUE)
aov_tab <- aov_tab %>%
left_join(es %>% select(Parameter, `Eta2_partial`, `Eta2_generalized`),
by = c("term" = "Parameter"))
par(mfrow=c(2,2)); plot(m); par(mfrow=c(1,1))
res <- residuals(m)
shapiro_p <- shapiro.test(res)$p.value
cat("\nShapiro-Wilk p =", signif(shapiro_p,3), "(normality of residuals)\n")
lev <- car::leveneTest(y ~ fert*irr, data = d, center = median)
cat("\nLevene test (median-based) for homogeneity of variance:\n"); print(lev)
cat("\nperformance::check_model(m):\n")
print(performance::check_model(m))  # plots/flags common issues
cell_tests <- d %>% group_by(fert, irr) %>%
summarise(sw_p = tryCatch(shapiro.test(y)$p.value, error=function(e) NA_real_), .groups="drop")
print(cell_tests)
emm_int <- emmeans(m, ~ fert * irr)
